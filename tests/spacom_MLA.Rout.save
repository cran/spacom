
R version 3.0.2 (2013-09-25) -- "Frisbee Sailing"
Copyright (C) 2013 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #### new tests on the test data
> library(spacom)
> library(methods)
> 
> data(d_geo)
> data(traces_event)
> traces_event=traces_event[seq(1, nrow(traces_event), by=100),]
> data(traces_ind)
> data(homog_census)
> 
> ### create weight matrices
> 
> geow.50 <- WeightMatrix(d_geo, bandwidth=50)
> geow.100 <- WeightMatrix(d_geo, bandwidth=100)
> geow.200 <- WeightMatrix(d_geo, bandwidth=200)
> 
> ### MLA EXACT
> 
> ## prepare first spaw exact object
> 
> homog.0.50 <- SpawExact(precise.data=homog_census,
+                         context.id="area.name",
+                         contextual.names=c("Homog_00", "Homog_00"),
+                         contextual.weight.matrices=list(NULL,geow.50))
> colnames(homog.0.50)[2:3] <- c("homog.0", "homog.50")
> 
> 
> wv.agg <- SpawAggregate(contextual.data=traces_event,
+                         context.id="area.name",
+                         contextual.names=c("w_all","w_all"),
+                         contextual.weight.matrices=list(NULL, geow.50),
+                         aggregation.functions="weighted.mean",
+                         design.weight.names="weight",
+                         nb.resamples=0,
+                         verbose=FALSE)
description done                                                   
> 
> colnames(wv.agg)[2:3] <- c("w_all.0", "w_all.50")
> ## merge 2 outputs
> cont.data <- merge(homog.0.50, wv.agg, by="area.name")
> 
> 
> ## prepare ind level data
> traces_ind <- na.exclude(traces_ind)
> 
> ## MlSpawExact
> ass_test1 <-
+   MLSpawExact(
+     individual.level.data=traces_ind,
+     context.id="area.name",
+     formula=cg_ass~victim_d+comb_d+male+age_1990+high_school+higher_edu+
+     (1|area.name)+w_all.0+homog.0,
+     precise.data=cont.data,
+     verbose=FALSE)
> ### emypt model
> ass_test1.1 <-
+   MLSpawExact(
+     individual.level.data=traces_ind,
+     context.id="area.name",
+     formula=cg_ass~1+(1|area.name),
+     precise.data=NULL,
+     verbose=FALSE)
> ### only individual level
> ass_test1.2 <-
+   MLSpawExact(
+     individual.level.data=traces_ind,
+     context.id="area.name",
+     formula=cg_ass~victim_d+comb_d+male+age_1990+high_school+higher_edu+
+     (1|area.name),
+     precise.data=NULL,
+     verbose=FALSE)
> 
> ### add lmer argument
> ass_test2 <-
+   MLSpawExact(
+     individual.level.data=traces_ind,
+     context.id="area.name",
+     formula=cg_ass~victim_d+comb_d+male+age_1990+high_school+higher_edu+
+     (1|area.name)+w_all.0+homog.0,
+     precise.data=cont.data,
+     verbose=FALSE,
+     REML=FALSE)
> 
> ##### perform Moran on residuals
> mor.test1 <- MLSpawResidMoran(ml.spaw.obj=ass_test1,
+ 							  distance.matrix=d_geo,
+ 							  bandwidths=c(25,50,100,200),
+                               verbose=FALSE)
Computing I for bandwidth 25
moran done                                                         
Computing I for bandwidth 50
moran done                                                         
Computing I for bandwidth 100
moran done                                                         
Computing I for bandwidth 200
moran done                                                         
> 
> print(mor.test1)
              I
h.25  0.2358700
h.50  0.2571815
h.100 0.2484977
h.200 0.1791367
> 
> ############################# CHANGING FORMULA
> ### add individual level interaction
> ass_test3 <-
+   MLSpawExact(
+     individual.level.data=traces_ind,
+     context.id="area.name",
+     formula=cg_ass~victim_d+comb_d+male+age_1990+high_school+higher_edu+
+     (1|area.name)+w_all.0 + victim_d:male,
+     precise.data=cont.data,
+     verbose=FALSE)
> ## everything ok except standardized coef
> 
> ## add categorical ind level var
> traces_ind2 <- traces_ind
> traces_ind2$edu_all <- 0
> traces_ind2$edu_all[traces_ind2$high_school==1] <- 1
> traces_ind2$edu_all[traces_ind2$higher_edu==1] <- 2
> 
> ass_test3.1 <-
+   MLSpawExact(
+     individual.level.data=traces_ind2,
+     context.id="area.name",
+     formula=cg_ass~victim_d+comb_d+male+age_1990+ as.factor(edu_all) +
+     (1|area.name)+ w_all.0,
+     precise.data=cont.data,
+     verbose=FALSE)
> ## everything ok except standardized coef
> 
> ### random slope
> ass_test3.2 <-
+   MLSpawExact(
+     individual.level.data=traces_ind,
+     context.id="area.name",
+     formula=cg_ass~victim_d+comb_d+male+age_1990+high_school+higher_edu+
+     cg_acc+ (1 + cg_acc|area.name)+ w_all.0,
+     precise.data=cont.data,
+     verbose=FALSE)
> ## all okay
> 
> ### cross-level interaction
> ass_test3.3 <-
+   MLSpawExact(
+     individual.level.data=traces_ind,
+     context.id="area.name",
+     formula=cg_ass~victim_d+comb_d+male+age_1990+high_school+higher_edu+
+     cg_acc+ (1 + cg_acc|area.name)+ w_all.0 + cg_acc:w_all.0,
+     precise.data=cont.data,
+     verbose=FALSE)
> ## everything ok except standardized coef
> 
> 
> 
> ########### data issues
> 
> ## one area missing in individual level data
> tr.ind <- traces_ind[traces_ind$area.name!="LJ",]
> 
> ass_test4 <-
+   MLSpawExact(
+     individual.level.data=tr.ind,
+     context.id="area.name",
+     formula=cg_ass~victim_d+comb_d+male+age_1990+high_school+higher_edu+
+     (1|area.name)+w_all.0,
+     precise.data=cont.data,
+     verbose=FALSE)
Warning message:
In checkContexts(obj@precise.data[[obj@context.id]], obj@individual.level.data[[obj@context.id]]) :
  The following context id(s) appear in the aggregated data, but not in the individual level data: ''.
Please make sure this is what you wanted.

> ### doesn't give error message!
> 
> ## one are missing in contextual level data
> cont.data.1 <- cont.data[cont.data$area.name!="BG",]
> 
> ass_test5 <-
+   MLSpawExact(
+     individual.level.data=traces_ind,
+     context.id="area.name",
+     formula=cg_ass~victim_d+comb_d+male+age_1990+high_school+higher_edu+
+     (1|area.name)+w_all.0,
+     precise.data=cont.data.1,
+     verbose=FALSE)
Warning message:
In checkContexts(obj@precise.data[[obj@context.id]], obj@individual.level.data[[obj@context.id]]) :
  The following context id(s) appear in the individual level data, but not in the aggregated data: 'BG'.
This is almost certainly not what you wanted.

> ## it computes, no error message!
> 
> ## same number of context areas but different
> 
> ass_test5 <-
+   MLSpawExact(
+     individual.level.data=tr.ind,
+     context.id="area.name",
+     formula=cg_ass~victim_d+comb_d+male+age_1990+high_school+higher_edu+
+     (1|area.name)+w_all.0,
+     precise.data=cont.data.1,
+     verbose=FALSE)
Warning messages:
1: In checkContexts(obj@precise.data[[obj@context.id]], obj@individual.level.data[[obj@context.id]]) :
  The following context id(s) appear in the individual level data, but not in the aggregated data: 'BG'.
This is almost certainly not what you wanted.

2: In checkContexts(obj@precise.data[[obj@context.id]], obj@individual.level.data[[obj@context.id]]) :
  The following context id(s) appear in the aggregated data, but not in the individual level data: 'BG'.
Please make sure this is what you wanted.

> ## computes only on the same ones (n.area=78), doesn't give error msg
> 
> ## missing values in context data
> cont.data.2 <- cont.data
> cont.data.2$w_all.0[c(5,25,50,80)] <- NA
> 
> ass_test6 <-
+   MLSpawExact(
+     individual.level.data=traces_ind,
+     context.id="area.name",
+     formula=cg_ass~victim_d+comb_d+male+age_1990+high_school+higher_edu+
+     (1|area.name)+w_all.0,
+     precise.data=cont.data.2,
+     verbose=FALSE)
Warning message:
In PerformMLSpawExact(obj, ...) : There are NA's in your data!
. This is almost certainly *not* what you wanted. Spacom may not be able to compute standardized coefficients correctly (although it will try).

> ## it computes on 76 areas, no error msg, no std coeff for cont var
> 
> ## missing values in ind data
> ind.data.1 <- traces_ind
> ind.data.1$cg_ass[c(2,50,100,125)] <- NA
> 
> ass_test6 <-
+   MLSpawExact(individual.level.data=ind.data.1,
+               context.id="area.name",
+               formula=cg_ass~victim_d+comb_d+male+age_1990+high_school+
+               higher_edu+(1|area.name)+w_all.0,
+               precise.data=cont.data,
+               verbose=FALSE)
Warning message:
In PerformMLSpawExact(obj, ...) : There are NA's in your data!
. This is almost certainly *not* what you wanted. Spacom may not be able to compute standardized coefficients correctly (although it will try).

> ## it computes, but not std coeff
> 
> ass_test6.1 <-
+   MLSpawExact(
+     individual.level.data=traces_ind,
+     context.id="area.name",
+     formula=cg_ass~victim_d+comb_d+male+age_1990+high_school+higher_edu+
+     (1|area.name)+w_all.0,
+     precise.data=cont.data,
+     verbose=FALSE)
> 
> 
> 
> ####### ML RESAMPLE
> 
> 
> wv.0 <- SpawAggregate(contextual.data=traces_event,
+                       context.id="area.name",
+                       contextual.names="w_all",
+                       contextual.weight.matrices=NULL,
+                       aggregation.functions="weighted.mean",
+                       design.weight.names="weight",
+                       nb.resamples=2,
+                       verbose=FALSE)
description done                                                   
Warning message:
In checkConfidenceIntervals(confidence.intervals, obj@nb.resamples) :
  Warning, the confidence interval 1 = 0.95 excludes only 1 individuals. It may be unreliable.
> 
> names(wv.0) <- "wv.0"
> 
> wv.50 <- SpawAggregate(contextual.data=traces_event,
+                        context.id="area.name",
+                        contextual.names="w_all",
+                        contextual.weight.matrices=geow.50,
+                        aggregation.functions="weighted.mean",
+                        design.weight.names="weight",
+                        nb.resamples=2,
+                        verbose=FALSE)
description done                                                   
Warning message:
In checkConfidenceIntervals(confidence.intervals, obj@nb.resamples) :
  Warning, the confidence interval 1 = 0.95 excludes only 1 individuals. It may be unreliable.
> 
> names(wv.50) <- "wv.50"
> cont.agg <- merge(wv.0, wv.50)
> 
> data(traces_ind)
> traces_ind <- na.exclude(traces_ind)
> 
> rs.test1 <-
+   ResampleMLSpawAggregate(
+     individual.level.data=traces_ind,
+     context.id="area.name",
+     formula=cg_acc~victim_d+comb_d+male+age_1990+high_school+higher_edu+
+     (1|area.name)+wv.0+wv.50,
+     aggregates=cont.agg,
+     precise.data=NULL,
+     verbose=FALSE)
spacom done                                                        
Warning message:
In checkConfidenceIntervals(confidence.intervals, obj@nb.resamples) :
  Warning, the confidence interval 1 = 0.95 excludes only 1 individuals. It may be unreliable.
> ## check 2
> 
> wv.0.50 <- SpawAggregate(contextual.data=traces_event,
+                          context.id="area.name",
+                          contextual.names=c("w_all", "w_all"),
+                          contextual.weight.matrices=list(NULL, geow.50),
+                          aggregation.functions="weighted.mean",
+                          design.weight.names="weight",
+                          nb.resamples=2,
+                          verbose=FALSE)
description done                                                   
Warning message:
In checkConfidenceIntervals(confidence.intervals, obj@nb.resamples) :
  Warning, the confidence interval 1 = 0.95 excludes only 1 individuals. It may be unreliable.
> names(wv.0.50) <- c("wv.0", "wv.50")
> 
> 
> data(d_ident)
> w.id <- WeightMatrix(d_ident,2)
> 
> 
> wv.id <- SpawAggregate(contextual.data=traces_event,
+                        context.id="area.name",
+                        contextual.names="w_all",
+                        contextual.weight.matrices=w.id,
+                        aggregation.functions="weighted.mean",
+                        design.weight.names="weight",
+                        nb.resamples=2,
+                        verbose=FALSE)
description done                                                   
Warning message:
In checkConfidenceIntervals(confidence.intervals, obj@nb.resamples) :
  Warning, the confidence interval 1 = 0.95 excludes only 1 individuals. It may be unreliable.
> names(wv.id) <- "wv.id"
> 
> w.merge <- merge(wv.0.50, wv.id)
> 
> rs.test1 <-
+   ResampleMLSpawAggregate(
+     individual.level.data=traces_ind,
+     context.id="area.name",
+     formula=cg_ass~victim_d+comb_d+male+age_1990+high_school+higher_edu+
+     (1|area.name)+wv.50+wv.id,
+     aggregates=w.merge,
+     precise.data=NULL,
+     verbose=FALSE)
spacom done                                                        
Warning messages:
1: In checkConfidenceIntervals(confidence.intervals, obj@nb.resamples) :
  Warning, the confidence interval 1 = 0.95 excludes only 1 individuals. It may be unreliable.
2: Some predictor variables are on very different scales: consider rescaling 
3: Some predictor variables are on very different scales: consider rescaling 
> 
> proc.time()
   user  system elapsed 
  8.016   0.088   8.118 
